<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
	<!-- 根据员工ID获取其签单客户列表 -->
	<sql-query name="getOutLoanCustomerList">
		<![CDATA[
			select 
				c.id as customerId,
				c.name as customerName,
				c.phone,
				o.loanType,
				c.callCount,
				c.visitCount,
				c.dataPercent,
				c.attentionLevel,
				c.visibility,
				e.id as employeeId,
				e.name as employeeName,
				d.id as departmentId,
				d.name as departmentName,
				s.id as signCustomerId,
				s.contractNo,
				s.customerStatus as signCustomerStatus,
				c.companyId,
				s.warrantCompanyId,
				s.warrantDepartmentId,
				s.warrantEmployeeId,
				o.createTime,
				s.orderType,
				cs.sourceName,
				c.customerAssetTitile,
				c.customerAsset
			from outloancustomer o
			inner join signcustomer s
				on o.signCustomerId = s.id
			inner join customer c
				on s.customerId = c.id
			inner join employee e
				on c.employeeId = e.id
			left join customersource cs 
				on c.customerSourceId=cs.id	
			left join department d
				on c.departmentId = d.id
			where c.state in (:states) #{where} #{whereKey} #{dateScope}
		]]>
	</sql-query>
	
	<!-- 根据员工ID获取其签单客户列表的数量 -->
	<sql-query name="getOutLoanCustomerListCount">
		<![CDATA[
			select count(*) from (
				select 
					c.id
				from outloancustomer o
				inner join signcustomer s
					on o.signCustomerId = s.id
				inner join customer c
					on s.customerId = c.id
				inner join employee e
					on c.employeeId = e.id
				left join department d
					on c.departmentId = d.id
				where c.state in (:states) #{where} #{whereKey} #{dateScope} #{companyId}
			) temp
		]]>
	</sql-query>
	
</hibernate-mapping>