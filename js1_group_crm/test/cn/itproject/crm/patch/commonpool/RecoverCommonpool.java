package cn.itproject.crm.patch.commonpool;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class RecoverCommonpool {
	public static void main(String[] args) {
		// 根据客户ID获取A数据库中原来的记录
		// 总共释放1395条客户数据
		String idString = "";
		// 2016-03-13 22:00:00释放1332条 
		idString += "5, 16, 71, 140, 167, 186, 215, 320, 358, 390, 439, 440, 502, 509, 512, 597, 614, 621, 737, 876, 901, 929, 931, 1028, 1029, 1034, 1040, 1045, 1047, 1057, 1059, 1062, 1064, 1067, 1070, 1077, 1087, 1095, 1098, 1101, 1106, 1107, 1110, 1115, 1121, 1122, 1124, 1132, 1135, 1139, 1145, 1146, 1148, 1168, 1193, 1225, 1330, 1341, 1407, 1411, 1436, 1472, 1511, 1540, 1548, 1557, 1563, 1564, 1622, 1627, 1665, 1714, 1738, 1745, 1799, 1800, 1804, 1819, 1857, 1873, 1875, 1880, 1882, 1981, 2009, 2068, 2070, 2119, 2228, 2233, 2321, 2353, 2359, 2440, 2452, 2470, 2538, 2557, 2563, 2575, 2601, 2607, 2632, 2734, 2750, 2768, 2809, 2841, 2891, 2894, 2995, 3041, 3068, 3069, 3155, 3203, 3248, 3280, 3344, 3345, 3347, 3352, 3367, 3375, 3385, 3431, 3432, 3445, 3504, 3513, 3515, 3620, 3631, 3635, 3641, 3710, 3714, 3726, 3779, 3817, 3827, 3857, 3860, 3887, 3890, 3900, 3909, 3934, 3937, 3957, 3972, 3983, 3986, 3998, 4009, 4026, 4041, 4045, 4107, 4180, 4192, 4254, 4258, 4268, 4274, 4287, 4294, 4304, 4305, 4307, 4313, 4370, 4378, 4390, 4391, 4427, 4436, 4438, 4453, 4495, 4502, 4519, 4528, 4530, 4531, 4532, 4537, 4545, 4562, 4565, 4577, 4579, 4586, 4600, 4620, 4629, 4637, 4641, 4642, 4648, 4699, 4735, 4743, 4810, 4836, 4839, 4852, 4857, 4880, 4888, 4903, 4928, 4950, 4959, 5018, 5026, 5037, 5040, 5041, 5074, 5091, 5122, 5181, 5192, 5234, 5276, 5340, 5360, 5368, 5382, 5383, 5384, 5420, 5445, 5462, 5465, 5484, 5492, 5536, 5587, 5616, 5646, 5652, 5659, 5677, 5712, 5720, 5787, 5803, 5861, 5878, 5884, 5890, 5893, 5900, 5902, 5919, 5925, 5929, 5934, 5940, 5947, 5953, 5991, 6002, 6011, 6016, 6023, 6037, 6054, 6067, 6080, 6102, 6120, 6154, 6161, 6165, 6169, 6177, 6182, 6202, 6207, 6209, 6216, 6220, 6232, 6322, 6344, 6357, 6382, 6408, 6413, 6420, 6440, 6473, 6501, 6526, 6531, 6535, 6559, 6612, 6661, 6669, 6672, 6707, 6736, 6741, 6801, 6855, 6901, 6914, 6924, 6934, 6935, 6936, 6941, 6951, 6964, 6965, 6992, 6993, 7000, 7009, 7015, 7017, 7033, 7035, 7040, 7099, 7102, 7103, 7114, 7116, 7139, 7150, 7187, 7224, 7242, 7245, 7309, 7338, 7410, 7419, 7434, 7439, 7450, 7572, 7590, 7595, 7596, 7676, 7718, 7815, 7817, 7826, 7849, 7856, 7884, 7916, 7970, 7980, 7989, 8083, 8188, 8193, 8279, 8284, 8312, 8363, 8364, 8369, 8377, 8443, 8477, 8484, 8501, 8614, 8625, 8626, 8632, 8690, 8754, 8780, 8791, 8796, 8810, 8814, 8817, 8822, 8830, 8842, 8960, 8972, 9002, 9008, 9021, 9083, 9129, 9164, 9246, 9255, 9287, 9288, 9311, 9324, 9362, 9405, 9415, 9434, 9452, 9464, 9465, 9482, 9484, 9488, 9499, 9513, 9514, 9517, 9523, 9524, 9528, 9552, 9554, 9570, 9572, 9578, 9588, 9609, 9653, 9700, 9701, 9728, 9742, 9764, 9766, 9767, 9795, 9796, 9810, 9832, 9873, 9879, 9900, 9942, 9948, 10040, 10053, 10139, 10157, 10160, 10162, 10165, 10168, 10175, 10181, 10192, 10198, 10209, 10234, 10243, 10249, 10269, 10309, 10340, 10380, 10382, 10412, 10414, 10435, 10449, 10529, 10535, 10544, 10597, 10659, 10802, 10840, 10860, 10945, 11016, 11026, 11030, 11033, 11038, 11043, 11078, 11079, 11152, 11178, 11213, 11239, 11264, 11288, 11318, 11376, 11446, 11469, 11483, 11495, 11559, 11574, 11699, 11705, 11751, 11770, 11780, 11959, 11982, 12009, 12036, 12223, 12225, 12307, 12415, 12418, 12436, 12465, 12552, 12590, 12647, 12649, 12652, 12655, 12691, 12708, 12722, 12786, 12803, 12834, 12854, 12878, 12893, 12895, 12898, 12902, 12929, 12934, 12944, 12960, 12968, 12979, 13034, 13043, 13124, 13128, 13151, 13183, 13247, 13277, 13418, 13433, 13453, 13503, 13509, 13512, 13513, 13518, 13535, 13641, 13642, 13647, 13703, 13704, 13707, 13710, 13711, 13722, 13727, 13745, 13752, 13761, 13768, 13777, 13960, 13962, 13972, 13998, 14000, 14008, 14035, 14041, 14047, 14050, 14059, 14060, 14061, 14072, 14081, 14127, 14136, 14141, 14147, 14170, 14172, 14173, 14179, 14181, 14184, 14199, 14201, 16615, 18646, 19001, 19229, 19243, 19248, 19253, 19420, 19423, 19633, 19636, 19643, 19676, 19689, 19721, 19760, 19775, 19783, 19793, 19808, 19822, 19824, 19836, 19838, 19842, 19852, 19867, 19903, 19908, 19914, 19919, 19934, 19945, 19983, 19998, 19999, 20016, 20021, 20040, 20045, 20056, 20096, 20132, 20152, 20185, 20223, 20279, 20409, 20415, 20516, 20588, 20629, 20676, 20692, 20713, 20715, 20744, 20753, 20767, 20837, 20844, 20870, 20884, 20944, 20974, 20979, 20981, 20984, 21041, 21078, 21082, 21118, 21171, 21296, 21372, 21376, 21531, 21790, 21932, 21935, 21940, 21958, 22004, 22030, 22068, 22086, 22104, 22118, 22214, 22288, 22298, 22449, 22499, 22533, 22609, 22665, 22669, 22823, 22859, 22866, 22903, 22913, 22926, 22980, 22994, 23053, 23123, 23352, 23468, 23483, 23496, 23589, 23604, 23666, 23795, 23837, 23874, 23919, 23974, 23984, 24047, 24051, 24147, 24148, 24171, 24173, 24174, 24184, 24203, 24206, 24272, 24276, 24366, 24405, 24460, 24583, 24680, 24829, 24878, 25021, 25071, 25076, 25077, 25081, 25087, 25213, 25271, 25337, 25520, 25575, 25638, 25741, 25925, 25962, 25989, 26146, 26160, 26582, 26792, 26811, 26970, 27074, 27241, 27266, 27293, 28155, 28162, 28240, 28251, 28365, 28597, 28705, 28758, 28958, 29069, 29237, 29242, 29246, 29289, 29728, 29847, 30271, 30272, 30277, 30327, 30337, 30370, 30406, 30414, 30433, 30471, 30472, 30476, 30486, 30494, 30499, 30551, 30580, 30614, 30619, 30625, 30627, 30650, 30651, 30704, 30714, 30732, 30737, 30738, 30740, 30769, 30776, 30780, 30783, 30869, 30870, 30906, 30920, 30930, 30932, 30933, 30947, 31020, 31026, 31204, 31205, 31216, 31217, 31232, 31263, 31268, 31287, 31289, 31292, 31294, 31300, 31307, 31317, 31319, 31365, 31367, 31391, 31396, 31406, 31411, 31412, 31418, 31421, 31424, 31432, 31473, 31554, 31559, 31588, 31604, 31651, 31654, 31660, 31674, 31679, 31685, 31690, 31707, 31729, 31787, 31789, 31796, 31821, 31829, 31831, 31832, 31879, 31880, 31887, 31894, 31972, 31982, 31989, 31991, 31997, 31999, 32041, 32042, 32045, 32078, 32081, 32099, 32170, 32172, 32175, 32177, 32189, 32209, 32213, 32223, 32242, 32255, 32259, 32263, 32265, 32271, 32273, 32286, 32300, 32308, 32309, 32312, 32344, 32346, 32347, 32351, 32365, 32375, 32484, 32491, 32505, 32507, 32509, 32511, 32523, 32565, 32588, 32662, 32777, 32799, 32843, 32873, 33095, 33119, 33131, 33159, 33176, 33186, 33209, 33210, 33211, 33289, 33290, 33291, 33310, 33324, 33349, 33364, 33365, 33366, 33384, 33448, 33480, 33490, 33492, 33496, 33539, 33546, 33555, 33691, 33711, 33718, 33719, 33734, 33744, 33755, 33786, 33801, 33816, 33949, 34308, 34482, 34819, 34826, 34827, 34836, 34838, 34850, 34853, 34894, 34905, 34906, 34907, 34911, 34918, 34926, 34960, 34978, 35009, 35016, 35026, 35059, 35133, 35141, 35304, 35312, 35340, 35377, 35384, 35411, 35427, 35499, 35647, 35678, 35710, 35712, 35777, 35878, 37174, 37177, 37183, 37197, 37199, 37238, 37254, 37275, 37291, 37294, 37295, 37316, 37333, 37357, 37871, 37897, 37906, 37911, 37948, 38015, 38023, 38027, 38028, 38031, 38032, 38285, 38306, 40008, 40155, 40212, 40254, 40278, 40292, 40295, 40306, 40317, 40319, 40320, 40324, 40331, 40496, 40842, 40846, 40849, 40880, 40910, 40911, 40942, 40952, 40973, 41010, 41018, 41039, 41063, 41084, 41088, 41100, 41121, 41385, 41418, 41440, 41448, 41524, 41560, 41726, 41755, 41786, 41857, 41861, 41911, 41927, 42135, 42216, 42447, 42620, 42641, 42844, 46447, 46496, 46955, 47012, 47016, 47065, 47162, 47189, 47290, 47528, 47558, 47561, 47698, 47787, 47788, 48009, 48120, 48178, 48181, 48232, 48247, 48254, 48258, 48266, 48329, 48368, 48384, 48386, 48388, 48390, 48392, 48394, 48413, 48415, 48420, 48422, 48428, 48432, 48434, 48443, 48688, 48694, 48702, 48705, 48713, 48855, 48865, 48885, 48919, 48945, 48947, 48962, 48973, 48983, 48989, 48990, 48995, 49064, 49100, 49101, 49105, 49129, 49160, 49161, 49174, 49177, 49184, 49244, 49247, 49302, 49306, 49320, 49411, 49484, 49510, 49540, 49827, 49831, 49940, 49941, 49949, 49991, 50000, 50015, 50016, 50054, 50055, 50061, 50063, 50078, 50274, 50332, 50343, 50406, 50419, 50615, 50621, 50960, 51314, 51400, 51404, 51743, 51954, 52006, 52068, 52078, 52242, 52451, 52766, 53004, 53058, 53072, 53101, 53121, 53147, 53513, 53531, 53564, 53571, 54061, 54437, 54492, 56309, 56386, 56390, 56411, 56460, 56606, 56678, 56798, 56800, 56992, 56994, 56995, 57024, 57028, 57045, 57064, 57069, 57085, 57091, 57093, 57399, 57766, 57849, 57861, 57869, 57883, 57889, 57891, 57909, 57912, 57963, 57971, 57977, 57995, 58245, 58260, 58290, 58295, 58316, 58321, 58323, 58340, 58409, 58435, 58454, 58458, 58459, 58467, 58475, 58476, 58483, 58484, 58489, 58513, 58536, 58547, 58562, 58847, 58848, 58849, 58862, 58866, 58868, 58887, 58893, 58896, 58990, 59004, 59007, 59015, 59024, 59025, 59029, 59037, 59042, 59045, 59051, 59077, 59117, 59124, 59141, 59143, 59161, 59168, 59178, 59185, 59206, 59370, 59380, 59396, 59424, 59427, 59429, 59432, 59433, 59434, 59435, 59436, 59437, 59438, 59439, 59443, 59446, 59447, 59448, 59450, 59451, 59454, 59455, 59458, 59460, 59461, 59517, 59521, 59523, 59525, 59635, 59638, 59652, 59655, 59670, 59672, 60074, 60078, 60139, 60290, 60509, 60516, 74399,";
		// 2016-03-14 00:00:00释放63条
		idString += "246, 356, 1066, 1099, 1109, 1138, 1140, 1884, 3697, 4263, 6646, 22915, 23244, 23476, 25485, 25743, 27176, 31618, 32296, 33327, 34971, 37277, 41551, 48183, 48192, 48636, 48648, 48661, 48832, 48905, 49995, 51813, 51965, 52130, 52536, 56008, 56055, 56073, 56076, 56182, 56184, 56206, 56986, 56988, 59292, 59537, 59665, 59680, 59690, 59871, 59900, 59917, 60268, 60275, 60308, 61107, 61269, 63775, 64011, 64021, 64023, 64053, 64071";
	
		List<RecoverTempCustomer> list = getADataByIds(idString);
//		System.out.println(list);
		int result = updateBData(list);
		System.out.println("成功更新了" + result + "行数据!");
	}

	public static List<RecoverTempCustomer> getADataByIds(String idString) {
		Connection connectionA = null;
		PreparedStatement statement = null;
		ResultSet rs = null;
		List<RecoverTempCustomer> list = new ArrayList<RecoverTempCustomer>();
		try {
			connectionA = DBUtil.getConnectionA();
			/**
			 * c.publicView = 1,
				c.state = 9,
				c.releaseDate = :releaseDate,
				c.releaseTime = :releaseTime,
				c.releaseType = :releaseType,
				c.releaseId = :releaseId
			 */
			String sql = "select id,departmentId,employeeId,state,publicView,releaseDate,releaseTime,releaseType,releaseId from customer where id in(" + idString + ")";
			statement = connectionA.prepareStatement(sql);
			rs = statement.executeQuery();
			while (rs.next()) {
				RecoverTempCustomer customer = new RecoverTempCustomer(
						rs.getInt("id"), 
						rs.getObject("departmentId"), 
						rs.getObject("employeeId"), 
						rs.getObject("state"), 
						rs.getObject("publicView"), 
						rs.getDate("releaseDate"), 
						rs.getDate("releaseTime"), 
						rs.getObject("releaseType"), 
						rs.getObject("releaseId"));
				System.out.println(customer);
				list.add(customer);
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			DBUtil.close(rs, statement, connectionA);
		}
		return list;
	}

	public static int updateBData(List<RecoverTempCustomer> list) {
		int i = 0;
		for (RecoverTempCustomer recoverTempCustomer : list) {
			i += updateBDataByCustomer(recoverTempCustomer);
			System.out.println(i);
		}
		return i;
	}

	// 根据客户ID修改B数据库中现有的记录
	public static int updateBDataByCustomer(RecoverTempCustomer customer) {
		//id,departmentId,employeeId,state,publicView,releaseDate,releaseTime,releaseType,releaseId
		String sql = "update customer set "
				+ "departmentId = ?,"
				+ "employeeId = ?,"
				+ "state = ? ,"
				+ "publicView = ?,"
				+ "releaseDate = ?,"
				+ "releaseTime = ?,"
				+ "releaseType = ?,"
				+ "releaseId = ?"
				+ " where id = ?";
		Connection connectionB = null;
		PreparedStatement statement = null;
		try {
			connectionB = DBUtil.getConnectionB();
			statement = connectionB.prepareStatement(sql);
			statement.setObject(1, customer.getDepartmentId());
			statement.setObject(2, customer.getEmployeeId());
			statement.setObject(3, customer.getState());
			statement.setObject(4, customer.getPublicView());
			Date releaseDate = customer.getReleaseDate();
			if (releaseDate!=null) {
				statement.setDate(5, new java.sql.Date(releaseDate.getTime()));
			}else{
				statement.setDate(5, null);
			}
			Date releaseTime = customer.getReleaseTime();
			if (releaseTime!=null) {
				statement.setDate(6, new java.sql.Date(releaseTime.getTime()));
			}else{
				statement.setDate(6, null);
			}
			statement.setObject(7, customer.getReleaseType());
			statement.setObject(8, customer.getReleaseId());
			
			statement.setInt(9, customer.getId());
			
			
			return statement.executeUpdate();
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			DBUtil.close(null, statement, connectionB);
		}
		return 0;
	}
}
